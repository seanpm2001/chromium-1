--- third_party/rust/unicode_width/v0_1/crate/Cargo.toml.orig	2022-01-20 10:36:24 UTC
+++ third_party/rust/unicode_width/v0_1/crate/Cargo.toml
@@ -1,29 +1,42 @@
-[package]
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
 
+[package]
 name = "unicode-width"
 version = "0.1.9"
 authors = ["kwantam <kwantam@gmail.com>", "Manish Goregaokar <manishsmail@gmail.com>"]
-
+exclude = ["target/*", "Cargo.lock"]
+description = "Determine displayed width of `char` and `str` types\naccording to Unicode Standard Annex #11 rules.\n"
 homepage = "https://github.com/unicode-rs/unicode-width"
-repository = "https://github.com/unicode-rs/unicode-width"
 documentation = "https://unicode-rs.github.io/unicode-width"
-license = "MIT/Apache-2.0"
-keywords = ["text", "width", "unicode"]
 readme = "README.md"
-description = """
-Determine displayed width of `char` and `str` types
-according to Unicode Standard Annex #11 rules.
-"""
+keywords = ["text", "width", "unicode"]
+license = "MIT/Apache-2.0"
+repository = "https://github.com/unicode-rs/unicode-width"
+[dependencies.compiler_builtins]
+version = "0.1"
+optional = true
 
-exclude = [ "target/*", "Cargo.lock" ]
+[dependencies.core]
+version = "1.0"
+optional = true
+package = "rustc-std-workspace-core"
 
-[dependencies]
-std = { version = "1.0", package = "rustc-std-workspace-std", optional = true }
-core = { version = "1.0", package = "rustc-std-workspace-core", optional = true }
-compiler_builtins = { version = "0.1", optional = true }
+[dependencies.std]
+version = "1.0"
+optional = true
+package = "rustc-std-workspace-std"
 
 [features]
+bench = []
 default = []
 no_std = []
-bench = []
-rustc-dep-of-std = ['std', 'core', 'compiler_builtins']
+rustc-dep-of-std = ["std", "core", "compiler_builtins"]
